# https://github.com/grafana/loki/blob/main/docs/sources/clients/docker-driver/configuration.md
# https://github.com/grafana/tns/blob/main/production/docker-compose/docker-compose.yml
# x-logging: &default-logging
#   driver: loki
#   options:
#     labels: namespace
#     loki-pipeline-stages: |
#       - regex:
#           expression: (traceid)=(\w+)
#       - labels:
#           trace_id:
#     loki-relabel-config: |
#       - action: replace
#         source_labels:
#           - namespace
#           - compose_service
#         separator: "/"
#         target_label: job
#       - action: replace
#         source_labels:
#           - container_name
#         target_label: instance
#       - action: labelmap
#         regex: traceid
#         replacement: trace_id
#     loki-url: http://localhost:3100/api/prom/push

services:

  pgadmin4:
    container_name: evolution-pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_LISTEN_PORT=5050
    expose:
      - 5050
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 5s
      test: wget --no-verbose --spider --tries=1 http://pgadmin4:5050
      timeout: 5s
    image: dpage/pgadmin4:6.10
    labels:
      namespace: pgadmin4
    # logging: *default-logging
    ports:
      - 5050:5050
    restart: "always"
    volumes:
      - ./docker/pgadmin4.json:/pgadmin4/servers.json:ro
      - pgadmin:/var/lib/pgadmin

  postgres:
    container_name: evolution-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 5s
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 5s
    image: postgres:14.5
    ports:
      - 5432:5432
    restart: "always"
    volumes:
      - pgdata:/var/lib/postgresql/data

  swagger-filebuilder:
    container_name: evolution-swagger-filebuilder
    entrypoint: sh ./script/swagger-filebuilder.sh true
    # healthcheck:
    #   interval: 10s
    #   retries: 5
    #   start_period: 5s
    #   test: curl -f http://swagger-filebuilder
    #   timeout: 5s
    image: quay.io/goswagger/swagger:v0.29.0
    labels:
      namespace: swagger-filebuilder
    # logging: *default-logging
    restart: "no"
    volumes:
      - ./:/workspace
    working_dir: /workspace

  swagger-ui:
    # build: ./docker/swagger-ui.Dockerfile
    container_name: evolution-swagger-ui
    depends_on:
      swagger-filebuilder:
        condition: service_completed_successfully
    environment:
      # https://github.com/swagger-api/swagger-ui/blob/master/docs/usage/configuration.md
      - API_KEY=**None**
      - BASE_URL=
      - NGINX_VERSION=1.21.6
      - NJS_VERSION=0.7.3
      - PKG_RELEASE=1
      - PORT=8080
      - SWAGGER_JSON=/app/swagger.json
      - SWAGGER_JSON_URL=
    expose:
      - 8085
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 5s
      test: wget --no-verbose --spider --tries=1 http://swagger-ui:8080
      timeout: 5s
    image: swaggerapi/swagger-ui:v4.12.0
    labels:
      namespace: swagger-ui
    # logging: *default-logging
    ports:
      - 8085:8080
    restart: "no"
    volumes:
      - ./doc/swagger.json:/app/swagger.json:ro

volumes:
  pgadmin:
  pgdata:
  swagger-filebuilder:
  swagger-ui:
